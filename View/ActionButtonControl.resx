<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAExSURBVEhL7ZW/
        LgZBFMV/ClEgSkEvVOqv8wJ0KhIhEYnEJ6H6XgKJ5/AIJAqlQkQienRewJ8jN5lprtmd2VmlX3KL3Zlz
        zs6d3R34IwSbglfBtWDWj/dCsCP4EijUk2DOz6tCMHDmsR57r0SwLBgTXCQCrG68ppjQlk/BsCXk3euK
        EZwGk2/BUSLE7u97XRbBruA4GJ43hNj10GuzBPO4oW0hq16bxZnHSoWseG2WBvNYJyHkTHDotVkSH1Gq
        Rl5XRKF59Yb+m/9GsFVoXvW2jAuWBG8J097mk4I7wXxLSJ25EU4jM3kWLAgWBS/OvHvPI4I1wUcws9PI
        VmL/eltJ/ZMbgunQ/42GkD2v6YTgQHCZCLkXTPj5nRHcBsMYsi7YFsz4uVUIHgRX1grBlB/vyw+9iH/g
        smZQYAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="guna2CirclePictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>